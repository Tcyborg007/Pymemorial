# pyproject.toml - PyMemorial v0.7.0
# MIGRADO PARA PADRÃO PEP 621 ([project] section)

# ============================================================================
# BUILD SYSTEM (Poetry)
# ============================================================================
[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"

# ============================================================================
# PROJECT METADATA (PEP 621 - PADRÃO NOVO)
# ============================================================================
[project]
name = "pymemorial"
version = "0.7.0"
description = "PyMemorial 2.0 — Memoriais de cálculo estrutural com geração de documentos profissionais (SymPy, multi-backend OpenSees/PyNite, visualização 2D/3D, WeasyPrint, natural language LaTeX)."
readme = "README.md"
license = "MIT" # ✅ CORRIGIDO: Agora é uma string SPDX
requires-python = ">=3.11,<3.13"

authors = [
  { name = "Equipe PyMemorial", email = "contato@pymemorial.org" }
]

keywords = [
  "structural-engineering",
  "civil-engineering",
  "sympy",
  "opensees",
  "pynite",
  "pyvista",
  "optimization",
  "pyomo",
  "latex",
  "abntex2",
  "weasyprint",
  "quarto",
  "document-generation",
  "mathdown",
  "memorial-de-calculo",
  "nbr-8800",
  "aisc-360"
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Education",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Mathematics",
  "Topic :: Text Processing :: Markup :: LaTeX",
  "Operating System :: OS Independent"
]

# Dependências Core
dependencies = [
  "sympy>=1.12,<2.0",
  "numpy>=1.26",
  "pandas>=2.0",
  "scipy>=1.11",
  "pint>=0.23",
  "forallpeople>=2.7",
  "jinja2>=3.1",
  "weasyprint>=63",
  "pyphen>=0.14.0",
  "matplotlib>=3.8",
  "rich>=13.7",
  "click>=8.1",
  "pydantic>=2.6",
  "pynitefea>=0.0.79; python_version >= '3.10' and python_version < '3.13'",
  "pyvista>=0.46.3,<0.47.0",
  "vtk>=9.5.2,<10.0.0",
  "pillow>=10.0",
  "pyyaml>=6.0",
  "spacy (>=3.8.7,<4.0.0)",
  "transformers (>=4.57.1,<5.0.0)",
  "markdown2 (>=2.5.4,<3.0.0)"
]

# Extras (optional-dependencies)
[project.optional-dependencies]
backends-lite = [
  "PyNiteFEA>=0.0.79; python_version < '3.13'"
]
backends-opensees = [
  "openseespy>=3.7; python_version >= '3.11' and python_version < '3.13'",
  "opstool>=1.0.19; python_version >= '3.11' and python_version < '3.13'"
]
backends = [
  "PyNiteFEA>=0.0.79; python_version < '3.13'",
  "openseespy>=3.7; python_version < '3.13'",
  "opstool>=1.0.19; python_version < '3.13'"
]
sections = [
  "sectionproperties>=3.3.0",
  "concreteproperties>=0.7.0; python_version >= '3.11'"
]
sections-basic = [
  "sectionproperties>=3.3.0"
]
sections-full = [
  "sectionproperties>=3.3.0",
  "concreteproperties>=0.7.0; python_version >= '3.11'"
]
viz = [
  "pyvista>=0.44",
  "pyvistaqt>=0.11",
  "stpyvista>=0.0.11",
  "plotly>=5.20"
]
exporters = [
  "playwright>=1.45; platform_system != 'Windows'",
  "quarto-cli>=1.6.30"
]
document = [
  "weasyprint>=63",
  "jinja2>=3.1",
  "markdown>=3.6",
  "pygments>=2.18",
  "pyyaml>=6.0"
]
document-full = [
  "weasyprint>=63",
  "jinja2>=3.1",
  "markdown>=3.6",
  "pygments>=2.18",
  "pyyaml>=6.0",
  "reportlab>=4.2",
  "pypdf>=5.1"
]
optimize = [
  "pyomo>=6.8"
]
docs = [
  "sphinx>=8.0",
  "sphinx-rtd-theme>=3.0",
  "myst-parser>=3.0.0"
]
all = [
  "PyNiteFEA>=0.0.79; python_version < '3.13'",
  "sectionproperties>=3.3.0",
  "concreteproperties>=0.7.0; python_version >= '3.11'",
  "pyvista>=0.44",
  "plotly>=5.20",
  "weasyprint>=63",
  "markdown>=3.6",
  "pygments>=2.18",
  "pyomo>=6.8"
]

# Scripts CLI (Entry points)
[project.scripts]
pymemorial = "pymemorial.cli:main"

# URLs
[project.urls]
Homepage = "https://github.com/seu-usuario/pymemorial"
Repository = "https://github.com/seu-usuario/pymemorial"
Documentation = "https://pymemorial.readthedocs.io"
Issues = "https://github.com/seu-usuario/pymemorial/issues"
Changelog = "https://github.com/seu-usuario/pymemorial/blob/main/CHANGELOG.md"


# ============================================================================
# CONFIGURAÇÃO ESPECÍFICA DO POETRY (Mínimo)
# ============================================================================
[tool.poetry]
packages = [{ include = "pymemorial", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.11,<3.13"

# ============================================================================
# GRUPOS DE DESENVOLVIMENTO (tool.poetry.group.*)
# ============================================================================

[tool.poetry.group.dev]
optional = false
[tool.poetry.group.dev.dependencies]
black = ">=24.8"
ruff = ">=0.6"
mypy = ">=1.10"
"pre-commit" = ">=3.7"
commitizen = ">=3.27"
bumpver = ">=2023.1126"
ipython = ">=8.24"
ipdb = ">=0.13"
"pytest-cov" = "^7.0.0"

[tool.poetry.group.test]
optional = false
[tool.poetry.group.test.dependencies]
pytest = ">=8.2"
"pytest-cov" = ">=5.0"
"pytest-benchmark" = ">=4.0"
"pytest-xdist" = ">=3.5"
hypothesis = ">=6.103"
coverage = ">=7.6"
freezegun = ">=1.5"
"pytest-mock" = ">=3.14"

[tool.poetry.group.docs]
optional = true
[tool.poetry.group.docs.dependencies]
mkdocs = ">=1.6"
"mkdocs-material" = ">=9.5"
mkdocstrings = { version = ">=0.24", extras = ["python"] }

[tool.poetry.group.backends]
optional = true
[tool.poetry.group.backends.dependencies]
pynitefea = "^1.5.0"

[tool.poetry.group.sections]
optional = true
[tool.poetry.group.sections.dependencies]
sectionproperties = ">=3.3.0"

[tool.poetry.group.sections-full]
optional = true
[tool.poetry.group.sections-full.dependencies]
sectionproperties = ">=3.3.0"
concreteproperties = {version = ">=0.7.0", python = ">=3.11,<3.14"}

[tool.poetry.group.viz]
optional = true
[tool.poetry.group.viz.dependencies]
pyvista = ">=0.44"
plotly = ">=5.20"

[tool.poetry.group.document]
optional = true
[tool.poetry.group.document.dependencies]
weasyprint = ">=63"
markdown = ">=3.6"
pygments = ">=2.18"
reportlab = ">=4.2"
pypdf = ">=5.1"
pyphen = "^0.14.0"


# ============================================================================
# CONFIGURAÇÃO DE FERRAMENTAS
# ============================================================================

# ----- BLACK (Formatação de código) -----
[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312", "py313"]
skip-string-normalization = true
exclude = '''
/(
    dist
  | build
  | .venv
  | .git
  | docs/_build
  | node_modules
)/
'''

# ----- RUFF (Linter super-rápido) -----
[tool.ruff]
line-length = 100
target-version = "py310"
select = ["E","F","W","N","I","B","UP","PT","PL","RUF"]
ignore = ["E501"]
extend-exclude = ["dist", "build", ".venv", "docs/_build"]
fix = true
unsafe-fixes = true

[tool.ruff.lint.isort]
known-first-party = ["pymemorial"]
combine-as-imports = true
force-sort-within-sections = true

# ----- MYPY (Type checking) -----
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
check_untyped_defs = true
strict_optional = true
ignore_missing_imports = true
exclude = ["dist", "build", "docs/_build"]

# ============================================================================
# PYTEST (Configuração de testes)
# ============================================================================
[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
addopts = [
  "-ra",
  "-q",
  "--strict-markers",
  "--cov=src/pymemorial",
  "--cov-report=term-missing",
  "--cov-report=html:htmlcov",
  "--cov-report=xml:coverage.xml",
  "--maxfail=3",
  "--tb=short"
]
xfail_strict = true
log_cli = true
log_cli_level = "INFO"
# Filtros de warnings
filterwarnings = [
  "ignore::DeprecationWarning",
  "ignore::UserWarning",
  "ignore::FutureWarning",
  "ignore::PendingDeprecationWarning"
]
# Markers customizados (FASE 7)
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "integration: marks tests as integration tests",
  "unit: marks tests as unit tests",
  "phase1: tests for PHASE 1 (Core)",
  "phase2: tests for PHASE 2 (Equations)",
  "phase3: tests for PHASE 3 (Steel Sections)",
  "phase4: tests for PHASE 4 (Concrete Sections)",
  "phase5: tests for PHASE 5 (Composite Sections)",
  "phase6: tests for PHASE 6 (Visualization & Exporters)",
  "phase7: tests for PHASE 7 (Document Generation)"
]

# ============================================================================
# COVERAGE (Cobertura de testes)
# ============================================================================


[tool.coverage.run]
branch = true
source = ["src/pymemorial"]
parallel = true
omit = [
  "src/pymemorial/__init__.py",
  "src/pymemorial/__version__.py",
  "src/pymemorial/cli.py",
  "src/pymemorial/builder/*",
  "src/pymemorial/recognition/*",
  "src/pymemorial/mathdown/math_parser.py"
]

[tool.coverage.report]
fail_under = 24
show_missing = true
skip_empty = true
skip_covered = false
precision = 2
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "if __name__ == .__main__.:",
  "raise NotImplementedError",
  "raise AssertionError",
  "pass",
  "@abstractmethod",
  "@abc.abstractmethod",
  "def __repr__",
  "def __str__"
]

[tool.coverage.html]
directory = "htmlcov"
show_contexts = true

[tool.coverage.xml]
output = "coverage.xml"

# ============================================================================
# VERSIONAMENTO (Commitizen + Bumpver)
# ============================================================================
[tool.commitizen]
name = "cz_conventional_commits"
version = "0.7.0"
tag_format = "v$version"
version_files = [
  "src/pymemorial/__version__.py",
  "pyproject.toml:version"
]
update_changelog_on_bump = true
changelog_file = "CHANGELOG.md"

[tool.bumpver]
current_version = "0.7.0"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "chore(release): bump version {old_version} -> {new_version}"
tag_message = "release: {new_version}"
tag_scope = "default"
search = [
  "src/pymemorial/__version__.py",
  "pyproject.toml"
]
replace = [
  "src/pymemorial/__version__.py",
  "pyproject.toml"
]